"""Module to put any functions that are referred to in the "callables" section of Split.yaml"""

import os
from glob import glob
import attrs


def out_files_callable(output_dir, inputs, stdout, stderr):
    outputs = _list_outputs(
        output_dir=output_dir, inputs=inputs, stdout=stdout, stderr=stderr
    )
    return outputs["out_files"]


def _gen_filename(name, inputs=None, stdout=None, stderr=None, output_dir=None):
    raise NotImplementedError


def _list_outputs(inputs=None, stdout=None, stderr=None, output_dir=None):
    """Create a Bunch which contains all possible files generated
    by running the interface.  Some files are always generated, others
    depending on which ``inputs`` options are set.

    Returns
    -------

    outputs : Bunch object
        Bunch object containing all possible files generated by
        interface object.

        If None, file was not generated
        Else, contains path, filename of generated outputfile

    """
    outputs = {}
    ext = Info.output_type_to_ext(inputs.output_type)
    outbase = "vol[0-9]*"
    if inputs.out_base_name is not attrs.NOTHING:
        outbase = "%s[0-9]*" % inputs.out_base_name
    outputs["out_files"] = sorted(glob(os.path.join(output_dir, outbase + ext)))
    return outputs
