# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.fsl.epi.PrepareFieldmap' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# 
#     Interface for the fsl_prepare_fieldmap script (FSL 5.0)
# 
#     Prepares a fieldmap suitable for FEAT from SIEMENS data - saves output in
#     rad/s format (e.g. ```fsl_prepare_fieldmap SIEMENS
#     images_3_gre_field_mapping images_4_gre_field_mapping fmap_rads 2.65```).
# 
# 
#     Examples
#     --------
# 
#     >>> from nipype.interfaces.fsl import PrepareFieldmap
#     >>> prepare = PrepareFieldmap()
#     >>> prepare.inputs.in_phase = "phase.nii"
#     >>> prepare.inputs.in_magnitude = "magnitude.nii"
#     >>> prepare.inputs.output_type = "NIFTI_GZ"
#     >>> prepare.cmdline # doctest: +ELLIPSIS
#     'fsl_prepare_fieldmap SIEMENS phase.nii magnitude.nii .../phase_fslprepared.nii.gz 2.460000'
#     >>> res = prepare.run() # doctest: +SKIP
# 
# 
#     
task_name: PrepareFieldmap
nipype_name: PrepareFieldmap
nipype_module: nipype.interfaces.fsl.epi
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    in_magnitude: medimage/nifti1
    # type=file|default=<undefined>: Magnitude difference map, brain extracted
    in_phase: medimage/nifti1
    # type=file|default=<undefined>: Phase difference map, in SIEMENS format range from 0-4096 or 0-8192)
    out_fieldmap: Path
    # type=file: output name for prepared fieldmap
    # type=file|default=<undefined>: output name for prepared fieldmap
  callable_defaults:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set as the `default` method of input fields
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    out_fieldmap: generic/file
    # type=file: output name for prepared fieldmap
    # type=file|default=<undefined>: output name for prepared fieldmap
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    scanner:
    # type=string|default='SIEMENS': must be SIEMENS
    in_phase:
    # type=file|default=<undefined>: Phase difference map, in SIEMENS format range from 0-4096 or 0-8192)
    in_magnitude:
    # type=file|default=<undefined>: Magnitude difference map, brain extracted
    delta_TE:
    # type=float|default=2.46: echo time difference of the fieldmap sequence in ms. (usually 2.46ms in Siemens)
    nocheck:
    # type=bool|default=False: do not perform sanity checks for image size/range/dimensions
    out_fieldmap:
    # type=file: output name for prepared fieldmap
    # type=file|default=<undefined>: output name for prepared fieldmap
    output_type:
    # type=enum|default='NIFTI'|allowed['NIFTI','NIFTI_GZ','NIFTI_PAIR','NIFTI_PAIR_GZ']: FSL output type
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    in_phase:
    # type=file|default=<undefined>: Phase difference map, in SIEMENS format range from 0-4096 or 0-8192)
    in_magnitude:
    # type=file|default=<undefined>: Magnitude difference map, brain extracted
    output_type: '"NIFTI_GZ"'
    # type=enum|default='NIFTI'|allowed['NIFTI','NIFTI_GZ','NIFTI_PAIR','NIFTI_PAIR_GZ']: FSL output type
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests:
- cmdline: fsl_prepare_fieldmap SIEMENS phase.nii magnitude.nii .../phase_fslprepared.nii.gz 2.460000
  # str - the expected cmdline output
  inputs:
  # dict[str, str] - name-value pairs for inputs to be provided to the doctest.
  # If the field is of file-format type and the value is None, then the
  # '.mock()' method of the corresponding class is used instead.
    in_phase:
    # type=file|default=<undefined>: Phase difference map, in SIEMENS format range from 0-4096 or 0-8192)
    in_magnitude:
    # type=file|default=<undefined>: Magnitude difference map, brain extracted
    output_type: '"NIFTI_GZ"'
    # type=enum|default='NIFTI'|allowed['NIFTI','NIFTI_GZ','NIFTI_PAIR','NIFTI_PAIR_GZ']: FSL output type
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  directive:
  # str - any doctest directive to place on the cmdline call, e.g. # doctest: +ELLIPSIS
