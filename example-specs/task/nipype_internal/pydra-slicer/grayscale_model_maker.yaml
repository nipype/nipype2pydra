# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.slicer.surface.GrayscaleModelMaker' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# title: Grayscale Model Maker
# 
#     category: Surface Models
# 
#     description: Create 3D surface models from grayscale data. This module uses Marching Cubes to create an isosurface at a given threshold. The resulting surface consists of triangles that separate a volume into regions below and above the threshold. The resulting surface can be smoothed and decimated. This model works on continuous data while the module Model Maker works on labeled (or discrete) data.
# 
#     version: 3.0
# 
#     documentation-url: http://wiki.slicer.org/slicerWiki/index.php/Documentation/4.1/Modules/GrayscaleModelMaker
# 
#     license: slicer3
# 
#     contributor: Nicole Aucoin (SPL, BWH), Bill Lorensen (GE)
# 
#     acknowledgements: This work is part of the National Alliance for Medical Image Computing (NAMIC), funded by the National Institutes of Health through the NIH Roadmap for Medical Research, Grant U54 EB005149.
#     
task_name: GrayscaleModelMaker
nipype_name: GrayscaleModelMaker
nipype_module: nipype.interfaces.slicer.surface
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    InputVolume: generic/file
    # type=file|default=<undefined>: Volume containing the input grayscale data.
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    OutputGeometry: generic/file
    # type=file: Output that contains geometry model.
    # type=traitcompound|default=None: Output that contains geometry model.
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    InputVolume:
    # type=file|default=<undefined>: Volume containing the input grayscale data.
    OutputGeometry:
    # type=file: Output that contains geometry model.
    # type=traitcompound|default=None: Output that contains geometry model.
    threshold:
    # type=float|default=0.0: Grayscale threshold of isosurface. The resulting surface of triangles separates the volume into voxels that lie above (inside) and below (outside) the threshold.
    name:
    # type=str|default='': Name to use for this model.
    smooth:
    # type=int|default=0: Number of smoothing iterations. If 0, no smoothing will be done.
    decimate:
    # type=float|default=0.0: Target reduction during decimation, as a decimal percentage reduction in the number of polygons. If 0, no decimation will be done.
    splitnormals:
    # type=bool|default=False: Splitting normals is useful for visualizing sharp features. However it creates holes in surfaces which affect measurements
    pointnormals:
    # type=bool|default=False: Calculate the point normals? Calculated point normals make the surface appear smooth. Without point normals, the surface will appear faceted.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
