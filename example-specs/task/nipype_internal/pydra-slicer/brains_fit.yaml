# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.slicer.registration.brainsfit.BRAINSFit' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# title: General Registration (BRAINS)
# 
#     category: Registration
# 
#     description: Register a three-dimensional volume to a reference volume (Mattes Mutual Information by default). Described in BRAINSFit: Mutual Information Registrations of Whole-Brain 3D Images, Using the Insight Toolkit, Johnson H.J., Harris G., Williams K., The Insight Journal, 2007. http://hdl.handle.net/1926/1291
# 
#     version: 3.0.0
# 
#     documentation-url: http://wiki.slicer.org/slicerWiki/index.php/Modules:BRAINSFit
# 
#     license: https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt
# 
#     contributor: Hans J. Johnson, hans-johnson -at- uiowa.edu, http://wwww.psychiatry.uiowa.edu
# 
#     acknowledgements: Hans Johnson(1,3,4); Kent Williams(1); Gregory Harris(1), Vincent Magnotta(1,2,3);  Andriy Fedorov(5) 1=University of Iowa Department of Psychiatry, 2=University of Iowa Department of Radiology, 3=University of Iowa Department of Biomedical Engineering, 4=University of Iowa Department of Electrical and Computer Engineering, 5=Surgical Planning Lab, Harvard
#     
task_name: BRAINSFit
nipype_name: BRAINSFit
nipype_module: nipype.interfaces.slicer.registration.brainsfit
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    fixedVolume: generic/file
    # type=file|default=<undefined>: The fixed image for registration by mutual information optimization.
    movingVolume: generic/file
    # type=file|default=<undefined>: The moving image for registration by mutual information optimization.
    initialTransform: generic/file
    # type=file|default=<undefined>: Filename of transform used to initialize the registration.  This CAN NOT be used with either CenterOfHeadLAlign, MomentsAlign, GeometryAlign, or initialTransform file.
    fixedBinaryVolume: generic/file
    # type=file|default=<undefined>: Fixed Image binary mask volume, ONLY FOR MANUAL ROI mode.
    movingBinaryVolume: generic/file
    # type=file|default=<undefined>: Moving Image binary mask volume, ONLY FOR MANUAL ROI mode.
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    bsplineTransform: generic/file
    # type=file: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS BSpline
    # type=traitcompound|default=None: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS BSpline
    linearTransform: generic/file
    # type=file: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS ---NOT--- BSpline
    # type=traitcompound|default=None: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS ---NOT--- BSpline
    outputVolume: generic/file
    # type=file: (optional) Output image for registration. NOTE: You must select either the outputTransform or the outputVolume option.
    # type=traitcompound|default=None: (optional) Output image for registration. NOTE: You must select either the outputTransform or the outputVolume option.
    outputFixedVolumeROI: generic/file
    # type=file: The ROI automatically found in fixed image, ONLY FOR ROIAUTO mode.
    # type=traitcompound|default=None: The ROI automatically found in fixed image, ONLY FOR ROIAUTO mode.
    outputMovingVolumeROI: generic/file
    # type=file: The ROI automatically found in moving image, ONLY FOR ROIAUTO mode.
    # type=traitcompound|default=None: The ROI automatically found in moving image, ONLY FOR ROIAUTO mode.
    strippedOutputTransform: generic/file
    # type=file: File name for the rigid component of the estimated affine transform. Can be used to rigidly register the moving image to the fixed image. NOTE:  This value is overwritten if either bsplineTransform or linearTransform is set.
    # type=traitcompound|default=None: File name for the rigid component of the estimated affine transform. Can be used to rigidly register the moving image to the fixed image. NOTE:  This value is overwritten if either bsplineTransform or linearTransform is set.
    outputTransform: generic/file
    # type=file: (optional) Filename to which save the (optional) estimated transform. NOTE: You must select either the outputTransform or the outputVolume option.
    # type=traitcompound|default=None: (optional) Filename to which save the (optional) estimated transform. NOTE: You must select either the outputTransform or the outputVolume option.
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    fixedVolume:
    # type=file|default=<undefined>: The fixed image for registration by mutual information optimization.
    movingVolume:
    # type=file|default=<undefined>: The moving image for registration by mutual information optimization.
    bsplineTransform:
    # type=file: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS BSpline
    # type=traitcompound|default=None: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS BSpline
    linearTransform:
    # type=file: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS ---NOT--- BSpline
    # type=traitcompound|default=None: (optional) Filename to which save the estimated transform. NOTE: You must set at least one output object (either a deformed image or a transform.  NOTE: USE THIS ONLY IF THE FINAL TRANSFORM IS ---NOT--- BSpline
    outputVolume:
    # type=file: (optional) Output image for registration. NOTE: You must select either the outputTransform or the outputVolume option.
    # type=traitcompound|default=None: (optional) Output image for registration. NOTE: You must select either the outputTransform or the outputVolume option.
    initialTransform:
    # type=file|default=<undefined>: Filename of transform used to initialize the registration.  This CAN NOT be used with either CenterOfHeadLAlign, MomentsAlign, GeometryAlign, or initialTransform file.
    initializeTransformMode:
    # type=enum|default='Off'|allowed['Off','useCenterOfHeadAlign','useCenterOfROIAlign','useGeometryAlign','useMomentsAlign']: Determine how to initialize the transform center.  GeometryAlign on assumes that the center of the voxel lattice of the images represent similar structures.  MomentsAlign assumes that the center of mass of the images represent similar structures.  useCenterOfHeadAlign attempts to use the top of head and shape of neck to drive a center of mass estimate.  Off assumes that the physical space of the images are close, and that centering in terms of the image Origins is a good starting point.  This flag is mutually exclusive with the initialTransform flag.
    useRigid:
    # type=bool|default=False: Perform a rigid registration as part of the sequential registration steps.  This family of options superceeds the use of transformType if any of them are set.
    useScaleVersor3D:
    # type=bool|default=False: Perform a ScaleVersor3D registration as part of the sequential registration steps.  This family of options superceeds the use of transformType if any of them are set.
    useScaleSkewVersor3D:
    # type=bool|default=False: Perform a ScaleSkewVersor3D registration as part of the sequential registration steps.  This family of options superceeds the use of transformType if any of them are set.
    useAffine:
    # type=bool|default=False: Perform an Affine registration as part of the sequential registration steps.  This family of options superceeds the use of transformType if any of them are set.
    useBSpline:
    # type=bool|default=False: Perform a BSpline registration as part of the sequential registration steps.  This family of options superceeds the use of transformType if any of them are set.
    numberOfSamples:
    # type=int|default=0: The number of voxels sampled for mutual information computation.  Increase this for a slower, more careful fit.  You can also limit the sampling focus with ROI masks and ROIAUTO mask generation.
    splineGridSize:
    # type=inputmultiobject|default=[]: The number of subdivisions of the BSpline Grid to be centered on the image space.  Each dimension must have at least 3 subdivisions for the BSpline to be correctly computed. 
    numberOfIterations:
    # type=inputmultiobject|default=[]: The maximum number of iterations to try before failing to converge.  Use an explicit limit like 500 or 1000 to manage risk of divergence
    maskProcessingMode:
    # type=enum|default='NOMASK'|allowed['NOMASK','ROI','ROIAUTO']: What mode to use for using the masks.  If ROIAUTO is chosen, then the mask is implicitly defined using a otsu foreground and hole filling algorithm. The Region Of Interest mode (choose ROI) uses the masks to define what parts of the image should be used for computing the transform.
    fixedBinaryVolume:
    # type=file|default=<undefined>: Fixed Image binary mask volume, ONLY FOR MANUAL ROI mode.
    movingBinaryVolume:
    # type=file|default=<undefined>: Moving Image binary mask volume, ONLY FOR MANUAL ROI mode.
    outputFixedVolumeROI:
    # type=file: The ROI automatically found in fixed image, ONLY FOR ROIAUTO mode.
    # type=traitcompound|default=None: The ROI automatically found in fixed image, ONLY FOR ROIAUTO mode.
    outputMovingVolumeROI:
    # type=file: The ROI automatically found in moving image, ONLY FOR ROIAUTO mode.
    # type=traitcompound|default=None: The ROI automatically found in moving image, ONLY FOR ROIAUTO mode.
    outputVolumePixelType:
    # type=enum|default='float'|allowed['float','int','short','uchar','uint','ushort']: The output image Pixel Type is the scalar datatype for representation of the Output Volume.
    backgroundFillValue:
    # type=float|default=0.0: Background fill value for output image.
    maskInferiorCutOffFromCenter:
    # type=float|default=0.0: For use with --useCenterOfHeadAlign (and --maskProcessingMode ROIAUTO): the cut-off below the image centers, in millimeters, 
    scaleOutputValues:
    # type=bool|default=False: If true, and the voxel values do not fit within the minimum and maximum values of the desired outputVolumePixelType, then linearly scale the min/max output image voxel values to fit within the min/max range of the outputVolumePixelType.
    interpolationMode:
    # type=enum|default='NearestNeighbor'|allowed['BSpline','Blackman','Cosine','Hamming','Lanczos','Linear','NearestNeighbor','ResampleInPlace','Welch','WindowedSinc']: Type of interpolation to be used when applying transform to moving volume.  Options are Linear, NearestNeighbor, BSpline, WindowedSinc, or ResampleInPlace.  The ResampleInPlace option will create an image with the same discrete voxel values and will adjust the origin and direction of the physical space interpretation.
    minimumStepLength:
    # type=inputmultiobject|default=[]: Each step in the optimization takes steps at least this big.  When none are possible, registration is complete.
    translationScale:
    # type=float|default=0.0: How much to scale up changes in position compared to unit rotational changes in radians -- decrease this to put more rotation in the search pattern.
    reproportionScale:
    # type=float|default=0.0: ScaleVersor3D 'Scale' compensation factor.  Increase this to put more rescaling in a ScaleVersor3D or ScaleSkewVersor3D search pattern.  1.0 works well with a translationScale of 1000.0
    skewScale:
    # type=float|default=0.0: ScaleSkewVersor3D Skew compensation factor.  Increase this to put more skew in a ScaleSkewVersor3D search pattern.  1.0 works well with a translationScale of 1000.0
    maxBSplineDisplacement:
    # type=float|default=0.0:  Sets the maximum allowed displacements in image physical coordinates for BSpline control grid along each axis.  A value of 0.0 indicates that the problem should be unbounded.  NOTE:  This only constrains the BSpline portion, and does not limit the displacement from the associated bulk transform.  This can lead to a substantial reduction in computation time in the BSpline optimizer.,       
    histogramMatch:
    # type=bool|default=False: Histogram Match the input images.  This is suitable for images of the same modality that may have different absolute scales, but the same overall intensity profile. Do NOT use if registering images from different modailties.
    numberOfHistogramBins:
    # type=int|default=0: The number of histogram levels
    numberOfMatchPoints:
    # type=int|default=0: the number of match points
    strippedOutputTransform:
    # type=file: File name for the rigid component of the estimated affine transform. Can be used to rigidly register the moving image to the fixed image. NOTE:  This value is overwritten if either bsplineTransform or linearTransform is set.
    # type=traitcompound|default=None: File name for the rigid component of the estimated affine transform. Can be used to rigidly register the moving image to the fixed image. NOTE:  This value is overwritten if either bsplineTransform or linearTransform is set.
    transformType:
    # type=inputmultiobject|default=[]: Specifies a list of registration types to be used.  The valid types are, Rigid, ScaleVersor3D, ScaleSkewVersor3D, Affine, and BSpline.  Specifying more than one in a comma separated list will initialize the next stage with the previous results. If registrationClass flag is used, it overrides this parameter setting.
    outputTransform:
    # type=file: (optional) Filename to which save the (optional) estimated transform. NOTE: You must select either the outputTransform or the outputVolume option.
    # type=traitcompound|default=None: (optional) Filename to which save the (optional) estimated transform. NOTE: You must select either the outputTransform or the outputVolume option.
    fixedVolumeTimeIndex:
    # type=int|default=0: The index in the time series for the 3D fixed image to fit, if 4-dimensional.
    movingVolumeTimeIndex:
    # type=int|default=0: The index in the time series for the 3D moving image to fit, if 4-dimensional.
    medianFilterSize:
    # type=inputmultiobject|default=[]: The radius for the optional MedianImageFilter preprocessing in all 3 directions.
    removeIntensityOutliers:
    # type=float|default=0.0: The half percentage to decide outliers of image intensities. The default value is zero, which means no outlier removal. If the value of 0.005 is given, the module will throw away 0.005 % of both tails, so 0.01% of intensities in total would be ignored in its statistic calculation. 
    useCachingOfBSplineWeightsMode:
    # type=enum|default='ON'|allowed['OFF','ON']: This is a 5x speed advantage at the expense of requiring much more memory.  Only relevant when transformType is BSpline.
    useExplicitPDFDerivativesMode:
    # type=enum|default='AUTO'|allowed['AUTO','OFF','ON']: Using mode AUTO means OFF for BSplineDeformableTransforms and ON for the linear transforms.  The ON alternative uses more memory to sometimes do a better job.
    ROIAutoDilateSize:
    # type=float|default=0.0: This flag is only relevant when using ROIAUTO mode for initializing masks.  It defines the final dilation size to capture a bit of background outside the tissue region.  At setting of 10mm has been shown to help regularize a BSpline registration type so that there is some background constraints to match the edges of the head better.
    ROIAutoClosingSize:
    # type=float|default=0.0: This flag is only relevant when using ROIAUTO mode for initializing masks.  It defines the hole closing size in mm.  It is rounded up to the nearest whole pixel size in each direction. The default is to use a closing size of 9mm.  For mouse data this value may need to be reset to 0.9 or smaller.
    relaxationFactor:
    # type=float|default=0.0: Internal debugging parameter, and should probably never be used from the command line.  This will be removed in the future.
    maximumStepLength:
    # type=float|default=0.0: Internal debugging parameter, and should probably never be used from the command line.  This will be removed in the future.
    failureExitCode:
    # type=int|default=0: If the fit fails, exit with this status code.  (It can be used to force a successfult exit status of (0) if the registration fails due to reaching the maximum number of iterations.
    writeTransformOnFailure:
    # type=bool|default=False: Flag to save the final transform even if the numberOfIterations are reached without convergence. (Intended for use when --failureExitCode 0 )
    numberOfThreads:
    # type=int|default=0: Explicitly specify the maximum number of threads to use. (default is auto-detected)
    forceMINumberOfThreads:
    # type=int|default=0: Force the maximum number of threads to use for non thread safe MI metric.  CAUTION: Inconsistent results my arise!
    debugLevel:
    # type=int|default=0: Display debug messages, and produce debug intermediate results.  0=OFF, 1=Minimal, 10=Maximum debugging.
    costFunctionConvergenceFactor:
    # type=float|default=0.0:  From itkLBFGSBOptimizer.h: Set/Get the CostFunctionConvergenceFactor. Algorithm terminates when the reduction in cost function is less than (factor * epsmcj) where epsmch is the machine precision. Typical values for factor: 1e+12 for low accuracy; 1e+7 for moderate accuracy and 1e+1 for extremely high accuracy.  1e+9 seems to work well.,       
    projectedGradientTolerance:
    # type=float|default=0.0:  From itkLBFGSBOptimizer.h: Set/Get the ProjectedGradientTolerance. Algorithm terminates when the project gradient is below the tolerance. Default lbfgsb value is 1e-5, but 1e-4 seems to work well.,       
    gui:
    # type=bool|default=False: Display intermediate image volumes for debugging.  NOTE:  This is not part of the standard build system, and probably does nothing on your installation.
    promptUser:
    # type=bool|default=False: Prompt the user to hit enter each time an image is sent to the DebugImageViewer
    NEVER_USE_THIS_FLAG_IT_IS_OUTDATED_00:
    # type=bool|default=False: DO NOT USE THIS FLAG
    NEVER_USE_THIS_FLAG_IT_IS_OUTDATED_01:
    # type=bool|default=False: DO NOT USE THIS FLAG
    NEVER_USE_THIS_FLAG_IT_IS_OUTDATED_02:
    # type=bool|default=False: DO NOT USE THIS FLAG
    permitParameterVariation:
    # type=inputmultiobject|default=[]: A bit vector to permit linear transform parameters to vary under optimization.  The vector order corresponds with transform parameters, and beyond the end ones fill in as a default.  For instance, you can choose to rotate only in x (pitch) with 1,0,0;  this is mostly for expert use in turning on and off individual degrees of freedom in rotation, translation or scaling without multiplying the number of transform representations; this trick is probably meaningless when tried with the general affine transform.
    costMetric:
    # type=enum|default='MMI'|allowed['MC','MMI','MSE','NC']: The cost metric to be used during fitting. Defaults to MMI. Options are MMI (Mattes Mutual Information), MSE (Mean Square Error), NC (Normalized Correlation), MC (Match Cardinality for binary images)
    writeOutputTransformInFloat:
    # type=bool|default=False: By default, the output registration transforms (either the output composite transform or each transform component) are written to the disk in double precision. If this flag is ON, the output transforms will be written in single (float) precision. It is especially important if the output transform is a displacement field transform, or it is a composite transform that includes several displacement fields.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
