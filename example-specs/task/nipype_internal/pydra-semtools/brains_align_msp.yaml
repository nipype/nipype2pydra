# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.semtools.utilities.brains.BRAINSAlignMSP' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# title: Align Mid Sagittal Brain (BRAINS)
# 
#     category: Utilities.BRAINS
# 
#     description: Resample an image into ACPC alignment ACPCDetect
#     
task_name: BRAINSAlignMSP
nipype_name: BRAINSAlignMSP
nipype_module: nipype.interfaces.semtools.utilities.brains
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    inputVolume: generic/file
    # type=file|default=<undefined>: ,         The Image to be resampled,       
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    OutputresampleMSP: generic/file
    # type=file: ,         The image to be output.,       
    # type=traitcompound|default=None: ,         The image to be output.,       
    resultsDir: generic/directory
    # type=directory: ,         The directory for the results to be written.,       
    # type=traitcompound|default=None: ,         The directory for the results to be written.,       
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    inputVolume:
    # type=file|default=<undefined>: ,         The Image to be resampled,       
    OutputresampleMSP:
    # type=file: ,         The image to be output.,       
    # type=traitcompound|default=None: ,         The image to be output.,       
    verbose:
    # type=bool|default=False: ,         Show more verbose output,       
    resultsDir:
    # type=directory: ,         The directory for the results to be written.,       
    # type=traitcompound|default=None: ,         The directory for the results to be written.,       
    writedebuggingImagesLevel:
    # type=int|default=0: ,           This flag controls if debugging images are produced.  By default value of 0 is no images.  Anything greater than zero will be increasing level of debugging images.,       
    mspQualityLevel:
    # type=int|default=0: ,           Flag controls how aggressive the MSP is estimated.  0=quick estimate (9 seconds), 1=normal estimate (11 seconds), 2=great estimate (22 seconds), 3=best estimate (58 seconds).,       
    rescaleIntensities:
    # type=bool|default=False: ,           Flag to turn on rescaling image intensities on input.,       
    trimRescaledIntensities:
    # type=float|default=0.0: ,           Turn on clipping the rescaled image one-tailed on input.  Units of standard deviations above the mean.  Very large values are very permissive.  Non-positive value turns clipping off.  Defaults to removing 0.00001 of a normal tail above the mean.,       
    rescaleIntensitiesOutputRange:
    # type=inputmultiobject|default=[]: ,           This pair of integers gives the lower and upper bounds on the signal portion of the output image.  Out-of-field voxels are taken from BackgroundFillValue.,       
    BackgroundFillValue:
    # type=str|default='': Fill the background of image with specified short int value. Enter number or use BIGNEG for a large negative number.
    interpolationMode:
    # type=enum|default='NearestNeighbor'|allowed['BSpline','Blackman','Cosine','Hamming','Lanczos','Linear','NearestNeighbor','ResampleInPlace','Welch','WindowedSinc']: Type of interpolation to be used when applying transform to moving volume.  Options are Linear, ResampleInPlace, NearestNeighbor, BSpline, or WindowedSinc
    numberOfThreads:
    # type=int|default=0: Explicitly specify the maximum number of threads to use.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
