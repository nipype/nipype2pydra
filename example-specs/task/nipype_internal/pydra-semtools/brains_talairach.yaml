# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.semtools.brains.segmentation.BRAINSTalairach' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# title: BRAINS Talairach
# 
#     category: BRAINS.Segmentation
# 
#     description: This program creates a VTK structured grid defining the Talairach coordinate system based on four points: AC, PC, IRP, and SLA. The resulting structured grid can be written as either a classic VTK file or the new VTK XML file format. Two representations of the resulting grid can be written. The first is a bounding box representation that also contains the location of the AC and PC points. The second representation is the full Talairach grid representation that includes the additional rows of boxes added to the inferior allowing full coverage of the cerebellum.
# 
#     version: 0.1
# 
#     documentation-url: http://www.nitrc.org/plugins/mwiki/index.php/brains:BRAINSTalairach
# 
#     license: https://www.nitrc.org/svn/brains/BuildScripts/trunk/License.txt
# 
#     contributor: Steven Dunn and Vincent Magnotta
# 
#     acknowledgements: Funding for this work was provided by NIH/NINDS award NS050568
#     
task_name: BRAINSTalairach
nipype_name: BRAINSTalairach
nipype_module: nipype.interfaces.semtools.brains.segmentation
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    inputVolume: generic/file
    # type=file|default=<undefined>: Input image used to define physical space of images
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    outputBox: generic/file
    # type=file: Name of the resulting Talairach Bounding Box file
    # type=traitcompound|default=None: Name of the resulting Talairach Bounding Box file
    outputGrid: generic/file
    # type=file: Name of the resulting Talairach Grid file
    # type=traitcompound|default=None: Name of the resulting Talairach Grid file
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    AC:
    # type=inputmultiobject|default=[]: Location of AC Point 
    ACisIndex:
    # type=bool|default=False: AC Point is Index
    PC:
    # type=inputmultiobject|default=[]: Location of PC Point 
    PCisIndex:
    # type=bool|default=False: PC Point is Index
    SLA:
    # type=inputmultiobject|default=[]: Location of SLA Point 
    SLAisIndex:
    # type=bool|default=False: SLA Point is Index
    IRP:
    # type=inputmultiobject|default=[]: Location of IRP Point 
    IRPisIndex:
    # type=bool|default=False: IRP Point is Index
    inputVolume:
    # type=file|default=<undefined>: Input image used to define physical space of images
    outputBox:
    # type=file: Name of the resulting Talairach Bounding Box file
    # type=traitcompound|default=None: Name of the resulting Talairach Bounding Box file
    outputGrid:
    # type=file: Name of the resulting Talairach Grid file
    # type=traitcompound|default=None: Name of the resulting Talairach Grid file
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
