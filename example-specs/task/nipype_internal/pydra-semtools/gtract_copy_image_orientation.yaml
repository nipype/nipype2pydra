# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.semtools.diffusion.gtract.gtractCopyImageOrientation' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# title: Copy Image Orientation
# 
#     category: Diffusion.GTRACT
# 
#     description: This program will copy the orientation from the reference image into the moving image. Currently, the registration process requires that the diffusion weighted images and the anatomical images have the same image orientation (i.e. Axial, Coronal, Sagittal). It is suggested that you copy the image orientation from the diffusion weighted images and apply this to the anatomical image. This image can be subsequently removed after the registration step is complete. We anticipate that this limitation will be removed in future versions of the registration programs.
# 
#     version: 4.0.0
# 
#     documentation-url: http://wiki.slicer.org/slicerWiki/index.php/Modules:GTRACT
# 
#     license: http://mri.radiology.uiowa.edu/copyright/GTRACT-Copyright.txt
# 
#     contributor: This tool was developed by Vincent Magnotta and Greg Harris.
# 
#     acknowledgements: Funding for this version of the GTRACT program was provided by NIH/NINDS R01NS050568-01A2S1
#     
task_name: gtractCopyImageOrientation
nipype_name: gtractCopyImageOrientation
nipype_module: nipype.interfaces.semtools.diffusion.gtract
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    inputVolume: generic/file
    # type=file|default=<undefined>: Required: input file containing the signed short image to reorient without resampling.
    inputReferenceVolume: generic/file
    # type=file|default=<undefined>: Required: input file containing orientation that will be cloned.
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    outputVolume: generic/file
    # type=file: Required: name of output NRRD or Nifti file containing the reoriented image in reference image space.
    # type=traitcompound|default=None: Required: name of output NRRD or Nifti file containing the reoriented image in reference image space.
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    inputVolume:
    # type=file|default=<undefined>: Required: input file containing the signed short image to reorient without resampling.
    inputReferenceVolume:
    # type=file|default=<undefined>: Required: input file containing orientation that will be cloned.
    outputVolume:
    # type=file: Required: name of output NRRD or Nifti file containing the reoriented image in reference image space.
    # type=traitcompound|default=None: Required: name of output NRRD or Nifti file containing the reoriented image in reference image space.
    numberOfThreads:
    # type=int|default=0: Explicitly specify the maximum number of threads to use.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
