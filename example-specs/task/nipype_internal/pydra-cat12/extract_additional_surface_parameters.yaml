# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.cat12.surface.ExtractAdditionalSurfaceParameters' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# 
#     Additional surface parameters can be extracted that can be used for statistical analysis, such as:
# 
#     * Central surfaces
#     * Surface area
#     * Surface GM volume
#     * Gyrification Index
#     * Sulcus depth
#     * Toro's gyrification index
#     * Shaer's local gyrification index
#     * Laplacian gyrification indices
#     * Addicional surfaces
#     * Measure normalization
#     * Lazy processing
# 
#     http://www.neuro.uni-jena.de/cat12/CAT12-Manual.pdf#page=53
# 
#     Examples
#     --------
#     >>> # Set the left surface files, both will be processed
#     >>> lh_path_central = 'lh.central.structural.gii'
#     >>> # Put here all surface files generated by CAT12 Segment, this is only required if the this approach is putted in
#     >>> surf_files = ['lh.sphere.reg.structural.gii', 'rh.sphere.reg.structural.gii', 'lh.sphere.structural.gii', 'rh.sphere.structural.gii', 'rh.central.structural.gii', 'lh.pbt.structural', 'rh.pbt.structural']
#     >>> extract_additional_measures = ExtractAdditionalSurfaceParameters(left_central_surfaces=lh_path_central, surface_files=surf_files)
#     >>> extract_additional_measures.run() # doctest: +SKIP
# 
#     
task_name: ExtractAdditionalSurfaceParameters
nipype_name: ExtractAdditionalSurfaceParameters
nipype_module: nipype.interfaces.cat12.surface
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    left_central_surfaces: generic/file+list-of
    # type=inputmultiobject|default=[]: Left and central surfaces files
    surface_files: generic/file+list-of
    # type=inputmultiobject|default=[]: All surface files
    paths: generic/directory+list-of
    # type=inputmultiobject|default=[]: Paths to add to matlabpath
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    left_central_surfaces:
    # type=inputmultiobject|default=[]: Left and central surfaces files
    surface_files:
    # type=inputmultiobject|default=[]: All surface files
    gyrification:
    # type=bool|default=True: Extract gyrification index (GI) based on absolute mean curvature. The method is described in Luders et al. Neuroimage, 29:1224-1230, 2006
    gmv:
    # type=bool|default=True: Extract volume
    area:
    # type=bool|default=True: Extract area surface
    depth:
    # type=bool|default=False: Extract sulcus depth based on euclidean distance between the central surface anf its convex hull.
    fractal_dimension:
    # type=bool|default=False: Extract cortical complexity (fractal dimension) which is described in Yotter ar al. Neuroimage, 56(3): 961-973, 2011
    matlab_cmd:
    # type=str|default='': matlab command to use
    paths:
    # type=inputmultiobject|default=[]: Paths to add to matlabpath
    mfile:
    # type=bool|default=True: Run m-code using m-file
    use_mcr:
    # type=bool|default=False: Run m-code using SPM MCR
    use_v8struct:
    # type=bool|default=True: Generate SPM8 and higher compatible jobs
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
