# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.niftyfit.dwi.FitDwi' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# Interface for executable fit_dwi from Niftyfit platform.
# 
#     Use NiftyFit to perform diffusion model fitting.
# 
#     Diffusion-weighted MR Fitting.
#     Fits DWI parameter maps to multi-shell, multi-directional data.
# 
#     `Source code <https://cmiclab.cs.ucl.ac.uk/CMIC/NiftyFit-Release>`_
# 
#     Examples
#     --------
# 
#     >>> from nipype.interfaces import niftyfit
#     >>> fit_dwi = niftyfit.FitDwi(dti_flag=True)
#     >>> fit_dwi.inputs.source_file = 'dwi.nii.gz'
#     >>> fit_dwi.inputs.bvec_file = 'bvecs'
#     >>> fit_dwi.inputs.bval_file = 'bvals'
#     >>> fit_dwi.inputs.rgbmap_file = 'rgb.nii.gz'
#     >>> fit_dwi.cmdline
#     'fit_dwi -source dwi.nii.gz -bval bvals -bvec bvecs -dti -error dwi_error.nii.gz -famap dwi_famap.nii.gz -mcout dwi_mcout.txt -mdmap dwi_mdmap.nii.gz -nodiff dwi_no_diff.nii.gz -res dwi_resmap.nii.gz -rgbmap rgb.nii.gz -syn dwi_syn.nii.gz -tenmap2 dwi_tenmap2.nii.gz -v1map dwi_v1map.nii.gz'
# 
#     
task_name: FitDwi
nipype_name: FitDwi
nipype_module: nipype.interfaces.niftyfit.dwi
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    source_file: medimage/nifti-gz
    # type=file|default=<undefined>: The source image containing the dwi data.
    bval_file: medimage/bval
    # type=file|default=<undefined>: The file containing the bvalues of the source DWI.
    bvec_file: medimage/bvec
    # type=file|default=<undefined>: The file containing the bvectors of the source DWI.
    te_file: generic/file
    # type=file|default=<undefined>: Filename of TEs (ms).
    te_value: generic/file
    # type=file|default=<undefined>: Value of TEs (ms).
    mask_file: generic/file
    # type=file|default=<undefined>: The image mask
    prior_file: generic/file
    # type=file|default=<undefined>: Filename of parameter priors for -ball and -nod.
    error_file: generic/file
    # type=file: Filename of parameter error maps
    # type=file|default=<undefined>: Filename of parameter error maps.
    res_file: generic/file
    # type=file: Filename of model residual map
    # type=file|default=<undefined>: Filename of model residual map.
    syn_file: generic/file
    # type=file: Filename of synthetic image
    # type=file|default=<undefined>: Filename of synthetic image.
    nodiff_file: generic/file
    # type=file: Filename of average no diffusion image.
    # type=file|default=<undefined>: Filename of average no diffusion image.
    mcmap_file: generic/file
    # type=file: Filename of multi-compartment model parameter map (-ivim,-ball,-nod).
    # type=file|default=<undefined>: Filename of multi-compartment model parameter map (-ivim,-ball,-nod)
    mdmap_file: generic/file
    # type=file: Filename of MD map/ADC
    # type=file|default=<undefined>: Filename of MD map/ADC
    famap_file: generic/file
    # type=file: Filename of FA map
    # type=file|default=<undefined>: Filename of FA map
    v1map_file: generic/file
    # type=file: Filename of PDD map [x,y,z]
    # type=file|default=<undefined>: Filename of PDD map [x,y,z]
    rgbmap_file: medimage/nifti-gz
    # type=file: Filename of colour FA map
    # type=file|default=<undefined>: Filename of colour-coded FA map
    tenmap_file: generic/file
    # type=file: Filename of tensor map
    # type=file|default=<undefined>: Filename of tensor map [diag,offdiag].
    tenmap2_file: generic/file
    # type=file: Filename of tensor map [lower tri]
    # type=file|default=<undefined>: Filename of tensor map [lower tri]
    cov_file: generic/file
    # type=file|default=<undefined>: Filename of ithe nc*nc covariance matrix [I]
    mcout: generic/file
    # type=file: Filename of mc samples (ascii text file)
    # type=file|default=<undefined>: Filename of mc samples (ascii text file)
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    error_file: generic/file
    # type=file: Filename of parameter error maps
    # type=file|default=<undefined>: Filename of parameter error maps.
    res_file: generic/file
    # type=file: Filename of model residual map
    # type=file|default=<undefined>: Filename of model residual map.
    syn_file: generic/file
    # type=file: Filename of synthetic image
    # type=file|default=<undefined>: Filename of synthetic image.
    nodiff_file: generic/file
    # type=file: Filename of average no diffusion image.
    # type=file|default=<undefined>: Filename of average no diffusion image.
    mdmap_file: generic/file
    # type=file: Filename of MD map/ADC
    # type=file|default=<undefined>: Filename of MD map/ADC
    famap_file: generic/file
    # type=file: Filename of FA map
    # type=file|default=<undefined>: Filename of FA map
    v1map_file: generic/file
    # type=file: Filename of PDD map [x,y,z]
    # type=file|default=<undefined>: Filename of PDD map [x,y,z]
    rgbmap_file: medimage/nifti-gz
    # type=file: Filename of colour FA map
    # type=file|default=<undefined>: Filename of colour-coded FA map
    tenmap_file: generic/file
    # type=file: Filename of tensor map
    # type=file|default=<undefined>: Filename of tensor map [diag,offdiag].
    tenmap2_file: generic/file
    # type=file: Filename of tensor map [lower tri]
    # type=file|default=<undefined>: Filename of tensor map [lower tri]
    mcmap_file: generic/file
    # type=file: Filename of multi-compartment model parameter map (-ivim,-ball,-nod).
    # type=file|default=<undefined>: Filename of multi-compartment model parameter map (-ivim,-ball,-nod)
    mcout: generic/file
    # type=file: Filename of mc samples (ascii text file)
    # type=file|default=<undefined>: Filename of mc samples (ascii text file)
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    source_file:
    # type=file|default=<undefined>: The source image containing the dwi data.
    bval_file:
    # type=file|default=<undefined>: The file containing the bvalues of the source DWI.
    bvec_file:
    # type=file|default=<undefined>: The file containing the bvectors of the source DWI.
    te_file:
    # type=file|default=<undefined>: Filename of TEs (ms).
    te_value:
    # type=file|default=<undefined>: Value of TEs (ms).
    mask_file:
    # type=file|default=<undefined>: The image mask
    prior_file:
    # type=file|default=<undefined>: Filename of parameter priors for -ball and -nod.
    rot_sform_flag:
    # type=int|default=0: Rotate the output tensors according to the q/s form of the image (resulting tensors will be in mm coordinates, default: 0).
    error_file:
    # type=file: Filename of parameter error maps
    # type=file|default=<undefined>: Filename of parameter error maps.
    res_file:
    # type=file: Filename of model residual map
    # type=file|default=<undefined>: Filename of model residual map.
    syn_file:
    # type=file: Filename of synthetic image
    # type=file|default=<undefined>: Filename of synthetic image.
    nodiff_file:
    # type=file: Filename of average no diffusion image.
    # type=file|default=<undefined>: Filename of average no diffusion image.
    mcmap_file:
    # type=file: Filename of multi-compartment model parameter map (-ivim,-ball,-nod).
    # type=file|default=<undefined>: Filename of multi-compartment model parameter map (-ivim,-ball,-nod)
    mdmap_file:
    # type=file: Filename of MD map/ADC
    # type=file|default=<undefined>: Filename of MD map/ADC
    famap_file:
    # type=file: Filename of FA map
    # type=file|default=<undefined>: Filename of FA map
    v1map_file:
    # type=file: Filename of PDD map [x,y,z]
    # type=file|default=<undefined>: Filename of PDD map [x,y,z]
    rgbmap_file:
    # type=file: Filename of colour FA map
    # type=file|default=<undefined>: Filename of colour-coded FA map
    ten_type:
    # type=enum|default='lower-tri'|allowed['diag-off-diag','lower-tri']: Use lower triangular (tenmap2) or diagonal, off-diagonal tensor format
    tenmap_file:
    # type=file: Filename of tensor map
    # type=file|default=<undefined>: Filename of tensor map [diag,offdiag].
    tenmap2_file:
    # type=file: Filename of tensor map [lower tri]
    # type=file|default=<undefined>: Filename of tensor map [lower tri]
    mono_flag:
    # type=bool|default=False: Fit single exponential to non-directional data [default with no b-vectors]
    ivim_flag:
    # type=bool|default=False: Fit IVIM model to non-directional data.
    dti_flag:
    # type=bool|default=False: Fit the tensor model [default with b-vectors].
    ball_flag:
    # type=bool|default=False: Fit the ball and stick model.
    ballv_flag:
    # type=bool|default=False: Fit the ball and stick model with optimised PDD.
    nod_flag:
    # type=bool|default=False: Fit the NODDI model
    nodv_flag:
    # type=bool|default=False: Fit the NODDI model with optimised PDD
    maxit_val:
    # type=int|default=0: Maximum number of non-linear LSQR iterations [100x2 passes])
    lm_vals:
    # type=tuple|default=(0.0, 0.0): LM parameters (initial value, decrease rate) [100,1.2].
    gn_flag:
    # type=bool|default=False: Use Gauss-Newton algorithm [Levenberg-Marquardt].
    vb_flag:
    # type=bool|default=False: Use Variational Bayes fitting with known prior (currently identity covariance...).
    cov_file:
    # type=file|default=<undefined>: Filename of ithe nc*nc covariance matrix [I]
    wls_flag:
    # type=bool|default=False: Use Variational Bayes fitting with known prior (currently identity covariance...).
    swls_val:
    # type=float|default=0.0: Use location-weighted least squares for DTI fitting [3x3 Gaussian]
    slice_no:
    # type=int|default=0: Fit to single slice number.
    voxel:
    # type=tuple|default=(0, 0, 0): Fit to single voxel only.
    diso_val:
    # type=float|default=0.0: Isotropic diffusivity for -nod [3e-3]
    dpr_val:
    # type=float|default=0.0: Parallel diffusivity for -nod [1.7e-3].
    wm_t2_val:
    # type=float|default=0.0: White matter T2 value [80ms].
    csf_t2_val:
    # type=float|default=0.0: CSF T2 value [400ms].
    perf_thr:
    # type=float|default=0.0: Threshold for perfusion/diffsuion effects [100].
    mcout:
    # type=file: Filename of mc samples (ascii text file)
    # type=file|default=<undefined>: Filename of mc samples (ascii text file)
    mcsamples:
    # type=int|default=0: Number of samples to keep [100].
    mcmaxit:
    # type=int|default=0: Number of iterations to run [10,000].
    acceptance:
    # type=float|default=0.0: Fraction of iterations to accept [0.23].
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    source_file:
    # type=file|default=<undefined>: The source image containing the dwi data.
    bvec_file:
    # type=file|default=<undefined>: The file containing the bvectors of the source DWI.
    bval_file:
    # type=file|default=<undefined>: The file containing the bvalues of the source DWI.
    rgbmap_file:
    # type=file: Filename of colour FA map
    # type=file|default=<undefined>: Filename of colour-coded FA map
    dti_flag: 'True'
    # type=bool|default=False: Fit the tensor model [default with b-vectors].
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests:
- cmdline: fit_dwi -source dwi.nii.gz -bval bvals -bvec bvecs -dti -error dwi_error.nii.gz -famap dwi_famap.nii.gz -mcout dwi_mcout.txt -mdmap dwi_mdmap.nii.gz -nodiff dwi_no_diff.nii.gz -res dwi_resmap.nii.gz -rgbmap rgb.nii.gz -syn dwi_syn.nii.gz -tenmap2 dwi_tenmap2.nii.gz -v1map dwi_v1map.nii.gz
  # str - the expected cmdline output
  inputs:
  # dict[str, str] - name-value pairs for inputs to be provided to the doctest.
  # If the field is of file-format type and the value is None, then the
  # '.mock()' method of the corresponding class is used instead.
    source_file:
    # type=file|default=<undefined>: The source image containing the dwi data.
    bvec_file:
    # type=file|default=<undefined>: The file containing the bvectors of the source DWI.
    bval_file:
    # type=file|default=<undefined>: The file containing the bvalues of the source DWI.
    rgbmap_file:
    # type=file: Filename of colour FA map
    # type=file|default=<undefined>: Filename of colour-coded FA map
    dti_flag: 'True'
    # type=bool|default=False: Fit the tensor model [default with b-vectors].
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  directive:
  # str - any doctest directive to place on the cmdline call, e.g. # doctest: +ELLIPSIS
