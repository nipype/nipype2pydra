# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.camino.dti.ModelFit' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# 
#     Fits models of the spin-displacement density to diffusion MRI measurements.
# 
#     This is an interface to various model fitting routines for diffusion MRI data that
#     fit models of the spin-displacement density function. In particular, it will fit the
#     diffusion tensor to a set of measurements as well as various other models including
#     two or three-tensor models. The program can read input data from a file or can
#     generate synthetic data using various test functions for testing and simulations.
# 
#     Example
#     -------
#     >>> import nipype.interfaces.camino as cmon
#     >>> fit = cmon.ModelFit()
#     >>> fit.model = 'dt'
#     >>> fit.inputs.scheme_file = 'A.scheme'
#     >>> fit.inputs.in_file = 'tensor_fitted_data.Bdouble'
#     >>> fit.run()          # doctest: +SKIP
# 
#     
task_name: ModelFit
nipype_name: ModelFit
nipype_module: nipype.interfaces.camino.dti
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    in_file: generic/file
    # type=file|default=<undefined>: voxel-order data filename
    scheme_file: generic/file
    # type=file|default=<undefined>: Camino scheme file (b values / vectors, see camino.fsl2scheme)
    outputfile: generic/file
    # type=file|default=<undefined>: Filename of the output file.
    outlier: generic/file
    # type=file|default=<undefined>: Specifies the name of the file to contain the outlier map generated by the RESTORE algorithm.
    noisemap: generic/file
    # type=file|default=<undefined>: Specifies the name of the file to contain the estimated noise variance on the diffusion-weighted signal, generated by a weighted tensor fit. The data type of this file is big-endian double.
    residualmap: generic/file
    # type=file|default=<undefined>: Specifies the name of the file to contain the weighted residual errors after computing a weighted linear tensor fit. One value is produced per measurement, in voxel order. The data type of this file is big-endian double. Images of the residuals for each measurement can be extracted with shredder.
    bgmask: generic/file
    # type=file|default=<undefined>: Provides the name of a file containing a background mask computed using, for example, FSL's bet2 program. The mask file contains zero in background voxels and non-zero in foreground.
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    fitted_data: generic/file
    # type=file: output file of 4D volume in voxel order
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
    out_file: out_file
    # type=file|default=<undefined>: 
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    model:
    # type=enum|default='dt'|allowed['adc','algdt','ball_stick','cylcyl adc','cylcyl algdt','cylcyl ball_stick','cylcyl dt','cylcyl ldt_wtd','cylcyl nldt','cylcyl nldt_pos','cylcyl restore','cylcyl_eq adc','cylcyl_eq algdt','cylcyl_eq ball_stick','cylcyl_eq dt','cylcyl_eq ldt_wtd','cylcyl_eq nldt','cylcyl_eq nldt_pos','cylcyl_eq restore','cylcylcyl adc','cylcylcyl algdt','cylcylcyl ball_stick','cylcylcyl dt','cylcylcyl ldt_wtd','cylcylcyl nldt','cylcylcyl nldt_pos','cylcylcyl restore','cylcylcyl_eq adc','cylcylcyl_eq algdt','cylcylcyl_eq ball_stick','cylcylcyl_eq dt','cylcylcyl_eq ldt_wtd','cylcylcyl_eq nldt','cylcylcyl_eq nldt_pos','cylcylcyl_eq restore','dt','ldt_wtd','nldt','nldt_pos','poscyl adc','poscyl algdt','poscyl ball_stick','poscyl dt','poscyl ldt_wtd','poscyl nldt','poscyl nldt_pos','poscyl restore','poscyl_eq adc','poscyl_eq algdt','poscyl_eq ball_stick','poscyl_eq dt','poscyl_eq ldt_wtd','poscyl_eq nldt','poscyl_eq nldt_pos','poscyl_eq restore','poscylcyl adc','poscylcyl algdt','poscylcyl ball_stick','poscylcyl dt','poscylcyl ldt_wtd','poscylcyl nldt','poscylcyl nldt_pos','poscylcyl restore','poscylcyl_eq adc','poscylcyl_eq algdt','poscylcyl_eq ball_stick','poscylcyl_eq dt','poscylcyl_eq ldt_wtd','poscylcyl_eq nldt','poscylcyl_eq nldt_pos','poscylcyl_eq restore','pospos adc','pospos algdt','pospos ball_stick','pospos dt','pospos ldt_wtd','pospos nldt','pospos nldt_pos','pospos restore','pospos_eq adc','pospos_eq algdt','pospos_eq ball_stick','pospos_eq dt','pospos_eq ldt_wtd','pospos_eq nldt','pospos_eq nldt_pos','pospos_eq restore','posposcyl adc','posposcyl algdt','posposcyl ball_stick','posposcyl dt','posposcyl ldt_wtd','posposcyl nldt','posposcyl nldt_pos','posposcyl restore','posposcyl_eq adc','posposcyl_eq algdt','posposcyl_eq ball_stick','posposcyl_eq dt','posposcyl_eq ldt_wtd','posposcyl_eq nldt','posposcyl_eq nldt_pos','posposcyl_eq restore','pospospos adc','pospospos algdt','pospospos ball_stick','pospospos dt','pospospos ldt_wtd','pospospos nldt','pospospos nldt_pos','pospospos restore','pospospos_eq adc','pospospos_eq algdt','pospospos_eq ball_stick','pospospos_eq dt','pospospos_eq ldt_wtd','pospospos_eq nldt','pospospos_eq nldt_pos','pospospos_eq restore','restore']: Specifies the model to be fit to the data.
    in_file:
    # type=file|default=<undefined>: voxel-order data filename
    inputdatatype:
    # type=enum|default='float'|allowed['char','double','float','int','long','short']: Specifies the data type of the input file. The input file must have BIG-ENDIAN ordering. By default, the input type is ``float``.
    scheme_file:
    # type=file|default=<undefined>: Camino scheme file (b values / vectors, see camino.fsl2scheme)
    outputfile:
    # type=file|default=<undefined>: Filename of the output file.
    outlier:
    # type=file|default=<undefined>: Specifies the name of the file to contain the outlier map generated by the RESTORE algorithm.
    noisemap:
    # type=file|default=<undefined>: Specifies the name of the file to contain the estimated noise variance on the diffusion-weighted signal, generated by a weighted tensor fit. The data type of this file is big-endian double.
    residualmap:
    # type=file|default=<undefined>: Specifies the name of the file to contain the weighted residual errors after computing a weighted linear tensor fit. One value is produced per measurement, in voxel order. The data type of this file is big-endian double. Images of the residuals for each measurement can be extracted with shredder.
    sigma:
    # type=float|default=0.0: Specifies the standard deviation of the noise in the data. Required by the RESTORE algorithm.
    bgthresh:
    # type=float|default=0.0: Sets a threshold on the average q=0 measurement to separate foreground and background. The program does not process background voxels, but outputs the same number of values in background voxels and foreground voxels. Each value is zero in background voxels apart from the exit code which is -1.
    bgmask:
    # type=file|default=<undefined>: Provides the name of a file containing a background mask computed using, for example, FSL's bet2 program. The mask file contains zero in background voxels and non-zero in foreground.
    cfthresh:
    # type=float|default=0.0: Sets a threshold on the average q=0 measurement to determine which voxels are CSF. This program does not treat CSF voxels any different to other voxels.
    fixedmodq:
    # type=list|default=[]: Specifies <M> <N> <Q> <tau> a spherical acquisition scheme with M measurements with q=0 and N measurements with :math:`|q|=Q` and diffusion time tau. The N measurements with :math:`|q|=Q` have unique directions. The program reads in the directions from the files in directory PointSets.
    fixedbvalue:
    # type=list|default=[]: As above, but specifies <M> <N> <b>. The resulting scheme is the same whether you specify b directly or indirectly using -fixedmodq.
    tau:
    # type=float|default=0.0: Sets the diffusion time separately. This overrides the diffusion time specified in a scheme file or by a scheme index for both the acquisition scheme and in the data synthesis.
    out_file:
    # type=file|default=<undefined>: 
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
