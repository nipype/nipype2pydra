# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.mipav.developer.MedicAlgorithmSPECTRE2010' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# SPECTRE 2010: Simple Paradigm for Extra-Cranial Tissue REmoval [1]_, [2]_.
# 
#     References
#     ----------
# 
#     .. [1] A. Carass, M.B. Wheeler, J. Cuzzocreo, P.-L. Bazin, S.S. Bassett, and J.L. Prince,
#            'A Joint Registration and Segmentation Approach to Skull Stripping',
#            Fourth IEEE International Symposium on Biomedical Imaging (ISBI 2007), Arlington, VA,
#            April 12-15, 2007.
#     .. [2] A. Carass, J. Cuzzocreo, M.B. Wheeler, P.-L. Bazin, S.M. Resnick, and J.L. Prince,
#            'Simple paradigm for extra-cerebral tissue removal: Algorithm and analysis',
#            NeuroImage 56(4):1982-1992, 2011.
# 
#     
task_name: MedicAlgorithmSPECTRE2010
nipype_name: MedicAlgorithmSPECTRE2010
nipype_module: nipype.interfaces.mipav.developer
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    inInput: generic/file
    # type=file|default=<undefined>: Input volume to be skullstripped.
    inAtlas: generic/file
    # type=file|default=<undefined>: SPECTRE atlas description file. A text file enumerating atlas files and landmarks.
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    outOriginal: generic/file
    # type=file: If Output in Original Space Flag is true then outputs the original input volume. Otherwise outputs the axialy reoriented input volume.
    # type=traitcompound|default=None: If Output in Original Space Flag is true then outputs the original input volume. Otherwise outputs the axialy reoriented input volume.
    outStripped: generic/file
    # type=file: Skullstripped result of the input volume with just the brain.
    # type=traitcompound|default=None: Skullstripped result of the input volume with just the brain.
    outMask: generic/file
    # type=file: Binary Mask of the skullstripped result with just the brain
    # type=traitcompound|default=None: Binary Mask of the skullstripped result with just the brain
    outPrior: generic/file
    # type=file: Probability prior from the atlas registrations
    # type=traitcompound|default=None: Probability prior from the atlas registrations
    outFANTASM: generic/file
    # type=file: Tissue classification of the whole input volume.
    # type=traitcompound|default=None: Tissue classification of the whole input volume.
    outd0: generic/file
    # type=file: Initial Brainmask
    # type=traitcompound|default=None: Initial Brainmask
    outMidsagittal: generic/file
    # type=file: Plane dividing the brain hemispheres
    # type=traitcompound|default=None: Plane dividing the brain hemispheres
    outSplitHalves: generic/file
    # type=file: Skullstripped mask of the brain with the hemispheres divided.
    # type=traitcompound|default=None: Skullstripped mask of the brain with the hemispheres divided.
    outSegmentation: generic/file
    # type=file: 2D image showing the tissue classification on the midsagittal plane
    # type=traitcompound|default=None: 2D image showing the tissue classification on the midsagittal plane
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    inInput:
    # type=file|default=<undefined>: Input volume to be skullstripped.
    inAtlas:
    # type=file|default=<undefined>: SPECTRE atlas description file. A text file enumerating atlas files and landmarks.
    inInitial:
    # type=int|default=0: Erosion of the initial mask, which is based on the probability mask and the classification., The initial mask is output as the d0 volume at the conclusion of SPECTRE.
    inImage:
    # type=enum|default='T1_SPGR'|allowed['FLAIR','T1_ALT','T1_MPRAGE','T1_SPGR','T2']: Set the image modality. MP-RAGE is recommended for most T1 sequence images.
    inOutput:
    # type=enum|default='true'|allowed['false','true']: Determines if the output results are transformed back into the space of the original input image.
    inFind:
    # type=enum|default='true'|allowed['false','true']: Find Midsaggital Plane
    inRun:
    # type=enum|default='true'|allowed['false','true']: Run Smooth Brain Mask
    inResample:
    # type=enum|default='true'|allowed['false','true']: Determines if the data is resampled to be isotropic during the processing.
    inInitial2:
    # type=float|default=0.0: Initial probability threshold
    inMinimum:
    # type=float|default=0.0: Minimum probability threshold
    inMMC:
    # type=int|default=0: The size of the dilation step within the Modified Morphological Closing.
    inMMC2:
    # type=int|default=0: The size of the erosion step within the Modified Morphological Closing.
    inInhomogeneity:
    # type=enum|default='true'|allowed['false','true']: Set to false by default, this parameter will make FANTASM try to do inhomogeneity correction during it's iterative cycle.
    inSmoothing:
    # type=float|default=0.0: 
    inBackground:
    # type=float|default=0.0: 
    inOutput2:
    # type=enum|default='true'|allowed['false','true']: Output Plane?
    inOutput3:
    # type=enum|default='true'|allowed['false','true']: Output Split-Halves?
    inOutput4:
    # type=enum|default='true'|allowed['false','true']: Output Segmentation on Plane?
    inDegrees:
    # type=enum|default='Rigid - 6'|allowed['Affine - 12','Global rescale - 7','Rigid - 6','Specific rescale - 9']: Degrees of freedom
    inCost:
    # type=enum|default='Correlation ratio'|allowed['Correlation ratio','Least squares','Normalized cross correlation','Normalized mutual information']: Cost function
    inRegistration:
    # type=enum|default='Trilinear'|allowed['Bspline 3rd order','Bspline 4th order','Cubic Lagrangian','Heptic Lagrangian','Quintic Lagrangian','Trilinear','Windowed sinc']: Registration interpolation
    inOutput5:
    # type=enum|default='Trilinear'|allowed['Bspline 3rd order','Bspline 4th order','Cubic Lagrangian','Heptic Lagrangian','Nearest Neighbor','Quintic Lagrangian','Trilinear','Windowed sinc']: Output interpolation
    inApply:
    # type=enum|default='All'|allowed['All','X','Y','Z']: Apply rotation
    inMinimum2:
    # type=float|default=0.0: Minimum angle
    inMaximum:
    # type=float|default=0.0: Maximum angle
    inCoarse:
    # type=float|default=0.0: Coarse angle increment
    inFine:
    # type=float|default=0.0: Fine angle increment
    inMultiple:
    # type=int|default=0: Multiple of tolerance to bracket the minimum
    inNumber:
    # type=int|default=0: Number of iterations
    inNumber2:
    # type=int|default=0: Number of minima from Level 8 to test at Level 4
    inUse:
    # type=enum|default='true'|allowed['false','true']: Use the max of the min resolutions of the two datasets when resampling
    inSubsample:
    # type=enum|default='true'|allowed['false','true']: Subsample image for speed
    inSkip:
    # type=enum|default='true'|allowed['false','true']: Skip multilevel search (Assume images are close to alignment)
    inMultithreading:
    # type=enum|default='true'|allowed['false','true']: Set to false by default, this parameter controls the multithreaded behavior of the linear registration.
    xPrefExt:
    # type=enum|default='nrrd'|allowed['nrrd']: Output File Type
    outOriginal:
    # type=file: If Output in Original Space Flag is true then outputs the original input volume. Otherwise outputs the axialy reoriented input volume.
    # type=traitcompound|default=None: If Output in Original Space Flag is true then outputs the original input volume. Otherwise outputs the axialy reoriented input volume.
    outStripped:
    # type=file: Skullstripped result of the input volume with just the brain.
    # type=traitcompound|default=None: Skullstripped result of the input volume with just the brain.
    outMask:
    # type=file: Binary Mask of the skullstripped result with just the brain
    # type=traitcompound|default=None: Binary Mask of the skullstripped result with just the brain
    outPrior:
    # type=file: Probability prior from the atlas registrations
    # type=traitcompound|default=None: Probability prior from the atlas registrations
    outFANTASM:
    # type=file: Tissue classification of the whole input volume.
    # type=traitcompound|default=None: Tissue classification of the whole input volume.
    outd0:
    # type=file: Initial Brainmask
    # type=traitcompound|default=None: Initial Brainmask
    outMidsagittal:
    # type=file: Plane dividing the brain hemispheres
    # type=traitcompound|default=None: Plane dividing the brain hemispheres
    outSplitHalves:
    # type=file: Skullstripped mask of the brain with the hemispheres divided.
    # type=traitcompound|default=None: Skullstripped mask of the brain with the hemispheres divided.
    outSegmentation:
    # type=file: 2D image showing the tissue classification on the midsagittal plane
    # type=traitcompound|default=None: 2D image showing the tissue classification on the midsagittal plane
    'null':
    xDefaultMem:
    # type=int|default=0: Set default maximum heap size
    xMaxProcess:
    # type=int|default=1: Set default maximum number of processes.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
