# This file is used to manually specify the semi-automatic conversion of
# 'nipype.interfaces.mipav.developer.MedicAlgorithmN3' from Nipype to Pydra.
#
# Please fill-in/edit the fields below where appropriate
#
# Docs
# ----
# Non-parametric Intensity Non-uniformity Correction, N3, originally by J.G. Sled.
task_name: MedicAlgorithmN3
nipype_name: MedicAlgorithmN3
nipype_module: nipype.interfaces.mipav.developer
inputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    inInput: generic/file
    # type=file|default=<undefined>: Input Volume
  metadata:
  # dict[str, dict[str, any]] - additional metadata to set on any of the input fields (e.g. out_file: position: 1)
outputs:
  omit:
  # list[str] - fields to omit from the Pydra interface
  rename:
  # dict[str, str] - fields to rename in the Pydra interface
  types:
  # dict[str, type] - override inferred types (use "mime-like" string for file-format types,
  # e.g. 'medimage/nifti-gz'). For most fields the type will be correctly inferred
  # from the nipype interface, but you may want to be more specific, particularly
  # for file types, where specifying the format also specifies the file that will be
  # passed to the field in the automatically generated unittests.
    outInhomogeneity: generic/file
    # type=file: Inhomogeneity Corrected Volume
    # type=traitcompound|default=None: Inhomogeneity Corrected Volume
    outInhomogeneity2: generic/file
    # type=file: Inhomogeneity Field
    # type=traitcompound|default=None: Inhomogeneity Field
  callables:
  # dict[str, str] - names of methods/callable classes defined in the adjacent `*_callables.py`
  # to set to the `callable` attribute of output fields
  templates:
  # dict[str, str] - `output_file_template` values to be provided to output fields
  requirements:
  # dict[str, list[str]] - input fields that are required to be provided for the output field to be present
tests:
- inputs:
  # dict[str, str] - values to provide to inputs fields in the task initialisation
  # (if not specified, will try to choose a sensible value)
    inInput:
    # type=file|default=<undefined>: Input Volume
    inSignal:
    # type=float|default=0.0: Default = min + 1, Values at less than threshold are treated as part of the background
    inMaximum:
    # type=int|default=0: Maximum number of Iterations
    inEnd:
    # type=float|default=0.0: Usually 0.01-0.00001, The measure used to terminate the iterations is the coefficient of variation of change in field estimates between successive iterations.
    inField:
    # type=float|default=0.0: Characteristic distance over which the field varies. The distance between adjacent knots in bspline fitting with at least 4 knots going in every dimension. The default in the dialog is one third the distance (resolution * extents) of the smallest dimension.
    inSubsample:
    # type=float|default=0.0: Usually between 1-32, The factor by which the data is subsampled to a lower resolution in estimating the slowly varying non-uniformity field. Reduce sampling in the finest sampling direction by the shrink factor.
    inKernel:
    # type=float|default=0.0: Usually between 0.05-0.50, Width of deconvolution kernel used to sharpen the histogram. Larger values give faster convergence while smaller values give greater accuracy.
    inWeiner:
    # type=float|default=0.0: Usually between 0.0-1.0
    inAutomatic:
    # type=enum|default='true'|allowed['false','true']: If true determines the threshold by histogram analysis. If true a VOI cannot be used and the input threshold is ignored.
    xPrefExt:
    # type=enum|default='nrrd'|allowed['nrrd']: Output File Type
    outInhomogeneity:
    # type=file: Inhomogeneity Corrected Volume
    # type=traitcompound|default=None: Inhomogeneity Corrected Volume
    outInhomogeneity2:
    # type=file: Inhomogeneity Field
    # type=traitcompound|default=None: Inhomogeneity Field
    'null':
    xDefaultMem:
    # type=int|default=0: Set default maximum heap size
    xMaxProcess:
    # type=int|default=1: Set default maximum number of processes.
    args:
    # type=str|default='': Additional parameters to the command
    environ:
    # type=dict|default={}: Environment variables
  imports:
  # list[nipype2pydra.task.base.importstatement] - list import statements required by the test, with each list item
  # consisting of 'module', 'name', and optionally 'alias' keys
  expected_outputs:
  # dict[str, str] - expected values for selected outputs, noting that tests will typically
  # be terminated before they complete for time-saving reasons, and therefore
  # these values will be ignored, when running in CI
  timeout: 10
  # int - the value to set for the timeout in the generated test, 
  # after which the test will be considered to have been initialised 
  # successfully. Set to 0 to disable the timeout (warning, this could
  # lead to the unittests taking a very long time to complete)
  xfail: true
  # bool - whether the unittest is expected to fail or not. Set to false
  # when you are satisfied with the edits you have made to this file
doctests: []
