# name of the converted workflow constructor function
name: compute_iqms
# name of the nipype workflow constructor
nipype_name: compute_iqms
# name of the nipype module the function is found within, e.g. mriqc.workflows.anatomical.base
nipype_module: mriqc.workflows.functional.base
# The name of the global struct/dict that contains workflow inputs that are to be converted to inputs of the function along with the type of the struct, either "dict" or "class"
input_struct:
- config.workflow
- class
# Name of the node that is to be considered the input of the workflow, i.e. its outputs will be the inputs of the workflow
inputnode: inputnode
# Name of the node that is to be considered the output of the workflow, i.e. its inputs will be the outputs of the workflow
outputnode: outputnode
# mappings between nipype packages and their pydra equivalents
package_mappings:
# mappings between nipype objects/classes and their pydra equivalents
other_mappings:
# name of the workflow variable that is returned
workflow_variable: workflow
